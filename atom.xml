<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ele Ztian&#39;s Blog</title>
  
  <subtitle>Essay</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://eleztian.github.io/"/>
  <updated>2017-10-03T02:52:52.105Z</updated>
  <id>https://eleztian.github.io/</id>
  
  <author>
    <name>Ele Ztian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++ Notes</title>
    <link href="https://eleztian.github.io/C-notes.html"/>
    <id>https://eleztian.github.io/C-notes.html</id>
    <published>2017-10-03T02:11:11.000Z</published>
    <updated>2017-10-03T02:52:52.105Z</updated>
    
    <content type="html"><![CDATA[<h3 id="名字空间（namespace）"><a href="#名字空间（namespace）" class="headerlink" title="名字空间（namespace）"></a>名字空间（namespace）</h3><p>防止命名冲突 std：c++标准库<br>using namespace std; 表示引入标准库的所有命名，否则的话如cout就需要使用 std::cout或者写成 #include <iostream.h></iostream.h></p><ol><li>const int *p; // 指向常量的指针</li><li>int * coust p; // 常指针</li><li>const int * const p; // 指向常量的常指针</li></ol><h3 id="作用于运算符"><a href="#作用于运算符" class="headerlink" title="作用于运算符::"></a>作用于运算符::</h3><p>::a  全局变量a</p><h3 id="带默认参数的函数"><a href="#带默认参数的函数" class="headerlink" title="带默认参数的函数"></a>带默认参数的函数</h3><p>默认参数必须放在没有指定默认参数的右边。</p><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> 类名</span></div><div class="line"><span class="class">&#123;</span></div><div class="line"><span class="keyword">private</span>: <span class="comment">// 当private紧邻&#123; 时 可以省略private关键字，即class默认类型为priavte</span></div><div class="line">    私有成员函数后变量   <span class="comment">// 只能被被类的函数调用或访问</span></div><div class="line"><span class="keyword">public</span>:</div><div class="line">    共有成员函数或变量   <span class="comment">// 对外开放，既可以被本类访问，也可以通过类的对象调用或访问</span></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    保护成员函数或变量   <span class="comment">// 只能被本类的成员函数或其他派生类的成员函数访问和调用</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>6.<br>类方法的定义</p><ol><li>内联函数的隐式定义， 直接在public等修饰词下定义</li><li>内联函数的显示定义， 在类外面， 定义 前加inline关键字 要加作用域</li><li>非内联函数定义， 在累外面定义  要加作用域</li></ol><hr><p>7.<br>构造函数<br>    带默认参数的构造函数，默认参数在声明里指定，在定义里不能指定<br>    复制构造函数：常常使用引用，如 类名(const 类名 &amp;引用对象名); 类存在默认的复制构造函数，<br>对每一个成员执行复制操作。但是默认复制构造函数有时候会导致指针悬挂的问题，应为默认的复制构造函数是值得复制，<br>而不是内存的深层复制，即是只是复制指针地址。这就导致前一个类结束生命时释放了内存，后一个类又重复释放内存导致出错。</p><h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><p>8.</p>]]></content>
    
    <summary type="html">
    
      复习C++笔记
    
    </summary>
    
    
      <category term="c++, notes" scheme="https://eleztian.github.io/tags/c-notes/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://eleztian.github.io/hello-world.html"/>
    <id>https://eleztian.github.io/hello-world.html</id>
    <published>2017-10-01T12:58:35.479Z</published>
    <updated>2017-10-03T02:24:36.001Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="hello" scheme="https://eleztian.github.io/tags/hello/"/>
    
      <category term="test" scheme="https://eleztian.github.io/tags/test/"/>
    
  </entry>
  
</feed>
