<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C++ Notes]]></title>
    <url>%2FC-notes.html</url>
    <content type="text"><![CDATA[名字空间（namespace）防止命名冲突 std：c++标准库using namespace std; 表示引入标准库的所有命名，否则的话如cout就需要使用 std::cout或者写成 #include const int *p; // 指向常量的指针 int * coust p; // 常指针 const int * const p; // 指向常量的常指针 作用于运算符::::a 全局变量a 带默认参数的函数默认参数必须放在没有指定默认参数的右边。 类123456789class 类名&#123;private: // 当private紧邻&#123; 时 可以省略private关键字，即class默认类型为priavte 私有成员函数后变量 // 只能被被类的函数调用或访问public: 共有成员函数或变量 // 对外开放，既可以被本类访问，也可以通过类的对象调用或访问private: 保护成员函数或变量 // 只能被本类的成员函数或其他派生类的成员函数访问和调用&#125;; 6.类方法的定义 内联函数的隐式定义， 直接在public等修饰词下定义 内联函数的显示定义， 在类外面， 定义 前加inline关键字 要加作用域 非内联函数定义， 在累外面定义 要加作用域 7.构造函数 带默认参数的构造函数，默认参数在声明里指定，在定义里不能指定 复制构造函数：常常使用引用，如 类名(const 类名 &amp;引用对象名); 类存在默认的复制构造函数，对每一个成员执行复制操作。但是默认复制构造函数有时候会导致指针悬挂的问题，应为默认的复制构造函数是值得复制，而不是内存的深层复制，即是只是复制指针地址。这就导致前一个类结束生命时释放了内存，后一个类又重复释放内存导致出错。 析构函数8.]]></content>
      <tags>
        <tag>c++, notes</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world.html</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <tags>
        <tag>hello</tag>
        <tag>test</tag>
      </tags>
  </entry>
</search>
